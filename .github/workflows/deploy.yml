name: Deploy Virtual Machines

on:
  workflow_dispatch:

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Terraform Format Check
        run: cd ./terraform && terraform fmt -check

      - name: Connect Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Get Vault TLS certificate
        id: vault-cert
        uses: hashicorp/vault-action@v2
        with:
          url: http://vault.horna.local:8200
          method: approle
          roleId: ${{ secrets.VAULT_TF_ROLE_ID }}
          secretId: ${{ secrets.VAULT_TF_SECRET_ID }}
          secrets: |
            cert_secrets/data/vault.horna.local certificate | TLS_CRT
  
      - name: Install Vault TLS certificate to trusted store
        run: |
          echo "${{ steps.vault-cert.outputs.TLS_CRT }}" > vault-ca.crt
          sudo cp vault-ca.crt /usr/local/share/ca-certificates/vault-ca.crt
          sudo update-ca-certificates
  
      - name: Terraform Init
        run: cd ./terraform && terraform init

      - name: Terraform Validate
        run: cd ./terraform && terraform validate

      - name: Terraform Plan
        run: |
          cd ./terraform \
          && terraform plan \
            -var "vault_role_id=${{ secrets.VAULT_TF_ROLE_ID }}" \
            -var "vault_secret=${{ secrets.VAULT_TF_SECRET_ID }}" \
            -out=tfplan

      - name: Terraform Apply (auto-approve on push to main)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: cd ./terraform && terraform apply -auto-approve tfplan
